{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Hero.svelte",
    "../../Footer.svelte",
    "../../EventMouseOver.svelte",
    "../../Keypad.svelte",
    "../../Todos.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Hero from './Hero.svelte';\n    import SimpleFooter from './Footer.svelte';\n    import ReactivityClickCounter from './ReactivityClickCounter.svelte';\n    import NestedSimple from './NestedSimple.svelte';\n    import AsynchronousRandomNumber from './AsynchronousRandomNumber.svelte';\n    import EventMouseOver from './EventMouseOver.svelte'\n    import EventDispatchingComponent from './EventDispatchingComponent.svelte'\n    import Todos from './Todos.svelte'\n    import Keypad from './Keypad.svelte'\n    import {count} from './stores.js'\n\n    export let name;\n\n    const personaldata = {\n        age: 23,\n        name: 'Pia',\n    }\n\n    // Component bindings\n    // Keypad component\n    // provide value by user input\n    // component is dispatching an event 'submit'. We are listening with an event handler handleSubmit\n    let telnr = '';\n    // $: telinfo = telnr ? telnr: 'Please enter your phone number!';\n    function handleSubmit() {\n      alert(`submitted pin: ${telnr}`)\n    }\n</script>\n\n<Hero/>\n<main>\n    <h1>Hello {name}!</h1>\n    <p>Visit the <a href=\"https://svelte.dev/tutorial\" target=\"_blank\">Svelte tutorial</a> to learn how to build Svelte apps.</p>\n    <p>Maecenas faucibus mollis interdum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Vestibulum id ligula porta felis euismod semper. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</p>\n\n    <h2>Stores</h2>\n\n    <div class=\"component\">\n      <h3>The count is {$count}</h3>\n      <button on:click={count.increment}>+</button>\n      <button on:click={count.decrement}>-</button>\n      <button on:click={count.reset}>reset</button>\n      <input type=\"number\" bind:value={$count}>\n    </div>\n\n    <h2>Bindings</h2>\n\n    <h3>{telnr ? telnr: 'Please enter your phone number!'}</h3>\n    <Keypad bind:valuepiep={telnr} on:submit={handleSubmit} />\n\n    <div class=\"todos\">\n      <Todos/>\n    </div>\n\n    <EventDispatchingComponent on:componentsmessageevent=\"{event => alert(`My message: ${event.detail.text} in color ${event.detail.color}`)}\"/>\n\n    <EventMouseOver/>\n    <AsynchronousRandomNumber/>\n\n    <NestedSimple {...personaldata}/>\n    <NestedSimple name={'Horst'}/>\n    <NestedSimple age={62} name={'Lisa'}/>\n    <NestedSimple/>\n\n    <ReactivityClickCounter/>\n</main>\n<SimpleFooter/>\n\n<style lang=\"less\">.component {\n  background-color: #ffedcc;\n  margin: 1rem 0;\n  padding: 1rem;\n}\nmain {\n  padding: 1em;\n  /* TODO how to create less variable that can be used in multiple components? */\n  max-width: 640px;\n  margin: 0 auto;\n}\n.todos {\n  background-color: #ffedcc;\n  margin: 1rem 0;\n  padding: 1rem;\n}\n.todos :global(.todo) {\n  background-color: orange;\n  padding: 0.3rem;\n}\n</style>\n",
    "<script>\n    let src = 'images/starstick.jpg';\n</script>\n\n<div id=\"hero\">\n    <img {src} alt=\"hero\">\n</div>\n\n<style lang=\"less\">#hero img {\n  width: 100%;\n}\n</style>\n",
    "<style>\n    footer {\n        color: white;\n        background-color: lightgrey;\n        width: 100%;\n        padding: 1rem 1rem;\n    }\n</style>\n\n<footer>Footer (a Svelte Component)</footer>\n",
    "<script>\n  let m = { x: 0, y: 0 };\n\n  function handleMousemove(event) {\n    m.x = event.clientX;\n    m.y = event.clientY;\n  }\n</script>\n\n<style>\n  div { width: 100%; height: 100%; min-height: 100px;\n    background-color: #eee;\n    margin-bottom: 1rem;\n  }\n</style>\n\n<div on:mousemove={handleMousemove}>\n  The mouse position is {m.x} x {m.y}\n</div>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let valuepiep = '';\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst select = num => () => valuepiep += num;\n\tconst clear  = () => valuepiep = '';\n\tconst submit = () => dispatch('submit');\n</script>\n\n<style>\n\t.keypad {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(3, 5em);\n\t\tgrid-template-rows: repeat(4, 3em);\n\t\tgrid-gap: 0.5em\n\t}\n\n\tbutton {\n\t\tmargin: 0\n\t}\n</style>\n\n<div class=\"keypad\">\n\t<button on:click={select(1)}>1</button>\n\t<button on:click={select(2)}>2</button>\n\t<button on:click={select(3)}>3</button>\n\t<button on:click={select(4)}>4</button>\n\t<button on:click={select(5)}>5</button>\n\t<button on:click={select(6)}>6</button>\n\t<button on:click={select(7)}>7</button>\n\t<button on:click={select(8)}>8</button>\n\t<button on:click={select(9)}>9</button>\n\n\t<button disabled={!valuepiep} on:click={clear}>clear</button>\n\t<button on:click={select(0)}>0</button>\n\t<button disabled={!valuepiep} on:click={submit}>submit</button>\n</div>\n",
    "<script>\n  let todos = [\n    {done: false, text: \"Doku schreiben\"},\n    {done: false, text: \"Tests schreiben\"},\n  ]\n  $: remaining = todos.filter(t => !t.done).length;\n\n  function add() {\n    todos = todos.concat({done:false, text: \"\"})\n  }\n\n  function clear() {\n    todos = todos.filter(t => !t.done);\n  }\n</script>\n\n<h3>Todos</h3>\n{#each todos as todo}\n  <div class=\"todo\">\n    <input type=\"checkbox\" bind:checked={todo.done}>\n    <input type=\"text\" placeholder=\"What needs to be done?\" bind:value=\"{todo.text}\">\n  </div>\n{:else}\n  <div>nothing to do</div>\n{/each}\n\n<div>{remaining} remaining todos</div>\n\n<div>\n  <button on:click={add}>Add new</button>\n  <button on:click={clear}>Clear completed</button>\n</div>\n\n<style type=\"less\">.todo {\n  display: flex;\n}\n.todo input[type=\"checkbox\"] {\n  margin-right: 0.3em;\n}\n.todo input[type=\"text\"] {\n  flex-grow: 1;\n}\n</style>\n"
  ],
  "names": [],
  "mappings": "AAqEmB,UAAU,eAAC,CAAC,AAC7B,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,OAAO,CAAE,IAAI,AACf,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,GAAG,CAEZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,OAAO,CAAE,IAAI,AACf,CAAC,AACD,qBAAM,CAAC,AAAQ,KAAK,AAAE,CAAC,AACrB,gBAAgB,CAAE,MAAM,CACxB,OAAO,CAAE,MAAM,AACjB,CAAC;AChFkB,mBAAK,CAAC,GAAG,cAAC,CAAC,AAC5B,KAAK,CAAE,IAAI,AACb,CAAC;ACTG,MAAM,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,SAAS,CAC3B,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CAAC,IAAI,AACtB,CAAC;ACIH,GAAG,cAAC,CAAC,AAAC,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,UAAU,CAAE,KAAK,CAChD,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,IAAI,AACrB,CAAC;ACAF,OAAO,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,kBAAkB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,QAAQ,CAAE,KAAK;CAChB,CAAC,AAED,MAAM,cAAC,CAAC,AACP,MAAM,CAAE,CAAC;CACV,CAAC;ACWiB,KAAK,4BAAC,CAAC,AACxB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,mBAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,cAAC,CAAC,AAC5B,YAAY,CAAE,KAAK,AACrB,CAAC,AACD,mBAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,cAAC,CAAC,AACxB,SAAS,CAAE,CAAC,AACd,CAAC"
}